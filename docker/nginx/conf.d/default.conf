server {
    # port 80 で listen
    # docker-compose.ymlでホストマシン上のポート8080を経由するすべてのリクエスト
    # がコンテナ内のポート80にリダイレクトするように設定済み
    listen 80;
    server_name localhost;
    # ドキュメントルートを設定
    # /var/www/htmlはソースコードを配置しているフォルダ
    # Laravelのhtmlディレクトリをルートに設定
    root /var/www/html/public;

    index index.php index.html index.htm;
    # HTTP レスポンスヘッダの Content_Type に付与する文字コード
    charset utf-8;

    access_log  /var/log/nginx/dev.access.log;
    error_log  /var/log/nginx/dev.error.log;

    # セキュリティ関連のヘッダーを追加
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    # Gzip圧縮の有効化
    gzip on;
    gzip_types text/plain application/json application/javascript text/css text/xml application/xml application/xml+rss;
    gzip_min_length 1000;  # 圧縮を適用する最小の応答サイズ
    gzip_proxied any;      # プロキシの応答にも適用
    gzip_vary on;          # Vary: Accept-Encoding ヘッダを追加

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location ~ [^/]\.php(/|$) {
        fastcgi_split_path_info ^(.+?\.php)(/.*)$;
        if (!-f $document_root$fastcgi_script_name) {
            return 404;
        }
        # https://httpoxy.org/ の脆弱性を緩和する
        fastcgi_param HTTP_PROXY "";
        # Unixソケットを使用してPHP-FPMと通信
        fastcgi_pass unix:/var/run/php-fpm/php-fpm.sock;
        # スラッシュで終わるURIの後に追加されるファイル名を設定
        fastcgi_index index.php;
        # fastcgi_paramsファイルに含まれるFastCGIパラメータの設定を読み込む
        include fastcgi_params;
        # SCRIPT_FILENAME パラメータは、PHP-FPM がスクリプト名を決定する際に使用する
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }
    location /css {  # css ディレクトリへのアクセスを許可
        alias /var/www/html/resources/css;
        expires 30d;
    }
    location /images {  # images ディレクトリへのアクセスを許可
        alias /var/www/html/resources/images;
        expires 30d;
    }
    location /js {
        alias /var/www/html/resources/js;
        expires 30d;
    }
}
